{"version":3,"sources":["components/03-example-fetch/MultipleCustomHooks.js","components/hooks/useCounter.js","components/hooks/useFetch.js","index.js"],"names":["MultipleCustomHooks","initialState","useState","counter","setCounter","reset","increment","decrement","useCounter","url","isMounted","useRef","data","loading","error","state","setState","useEffect","current","fetch","then","resp","json","useFetch","author","quote","className","onClick","ReactDOM","render","document","getElementById"],"mappings":"oKAKaA,EAAsB,WAAO,IAAD,ECFf,WAA0B,IAAxBC,EAAuB,uDAAR,GAAQ,EAEjBC,mBAASD,GAFQ,mBAExCE,EAFwC,KAE/BC,EAF+B,KAIzCC,EAAQ,WACVD,EAAYH,IAGVK,EAAY,WACdF,EAAYD,EAAU,IAGpBI,EAAY,WACdH,EAAYD,EAAU,IAG1B,MAAO,CACHA,UACAG,YACAC,YACAF,SDhB2BG,CAAW,GAAlCL,EAF6B,EAE7BA,QAASG,EAFoB,EAEpBA,UAFoB,EEFjB,SAAEG,GAEtB,IAAMC,EAAYC,kBAAO,GAFM,EAGLT,mBAAS,CAAEU,KAAM,KAAMC,SAAS,EAAMC,MAAO,OAHxC,mBAGxBC,EAHwB,KAGjBC,EAHiB,KAgC/B,OA3BAC,qBAAW,WACP,OAAO,WACHP,EAAUQ,SAAU,KAEzB,IAGHD,qBAAW,WAEPD,EAAS,CAAEJ,KAAM,KAAMC,SAAS,EAAMC,MAAO,OAE7CK,MAAOV,GACFW,MAAM,SAAAC,GAAI,OAAIA,EAAKC,UACnBF,MAAM,SAAAR,GAEEF,EAAUQ,SACXF,EAAS,CACLH,SAAS,EACTC,MAAO,KACPF,cAMlB,CAACH,IAEIM,EF3BmBQ,CAAS,6CAAD,OAA8CpB,IAAxEU,EAH6B,EAG7BA,QAASD,EAHoB,EAGpBA,KAHoB,IAITA,GAAQA,EAAK,GAAjCY,EAJ6B,EAI7BA,OAAQC,EAJqB,EAIrBA,MAEhB,OACI,oCACI,mDACA,6BAEIZ,EAGQ,yBAAKa,UAAU,gCAAf,cAMA,oCAAE,gCAAYA,UAAU,yBACpB,uBAAGA,UAAU,QAAb,IAAsBD,EAAtB,KACA,4BAAQC,UAAU,qBAAlB,IAAwCF,EAAxC,MAEA,4BACIE,UAAU,kBACVC,QAASrB,GAFb,sBGpB5BsB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.cbc9ba31.chunk.js","sourcesContent":["import React from 'react'\r\nimport './MultipleCustomHooks.css';\r\nimport { useFetch } from '../hooks/useFetch';\r\nimport { useCounter } from '../hooks/useCounter';\r\n\r\nexport const MultipleCustomHooks = () => {\r\n\r\n    const { counter, increment } = useCounter(1);\r\n    const { loading, data } = useFetch(`https://www.breakingbadapi.com/api/quotes/${counter}`);\r\n    const { author, quote } = !!data && data[0];\r\n    //!!data si data es null entonces devuelva false\r\n    return (\r\n        <>\r\n            <h1>Breaking bad Quotes</h1>\r\n            <hr />\r\n            {\r\n                loading\r\n                    ?\r\n                    (\r\n                        <div className=\"alert alert-info text-center\">\r\n                            Loading...\r\n                        </div>\r\n                    )\r\n                    :\r\n                    (\r\n                        <><blockquote className=\"blockquote text-right\">\r\n                            <p className=\"mb-0\"> {quote} </p>\r\n                            <footer className=\"blockquote-footer\"> {author} </footer>\r\n                        </blockquote>\r\n                            <button\r\n                                className=\"btn btn-primary\"\r\n                                onClick={increment}\r\n                            >\r\n                                Siguiente quote\r\n                     </button>\r\n                     </>\r\n                    )\r\n            }\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useCounter = ( initialState = 10 ) => {\r\n    \r\n    const [counter, setCounter] = useState(initialState); // 10\r\n\r\n    const reset = () => {\r\n        setCounter( initialState );\r\n    }\r\n\r\n    const increment = () => {\r\n        setCounter( counter + 1 );\r\n    }\r\n\r\n    const decrement = () => {\r\n        setCounter( counter - 1 );\r\n    }\r\n\r\n    return {\r\n        counter,\r\n        increment,\r\n        decrement,\r\n        reset\r\n    };\r\n\r\n}\r\n","import { useState, useEffect, useRef } from 'react';\r\n\r\n\r\nexport const useFetch = ( url ) => {\r\n    \r\n    const isMounted = useRef(true);\r\n    const [state, setState] = useState({ data: null, loading: true, error: null });\r\n\r\n    useEffect( () => {\r\n        return () => {\r\n            isMounted.current = false;\r\n        }\r\n    }, [])\r\n\r\n\r\n    useEffect( () => {\r\n\r\n        setState({ data: null, loading: true, error: null });\r\n\r\n        fetch( url )\r\n            .then( resp => resp.json() )\r\n            .then( data => {\r\n\r\n                if ( isMounted.current ) {\r\n                    setState({\r\n                        loading: false,\r\n                        error: null,\r\n                        data\r\n                    });\r\n                }\r\n\r\n            });\r\n\r\n    },[url])\r\n\r\n    return state;\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import { CounterApp } from './components/01-useState/CounterApp';\n//import { CounterWithCustomHook } from './components/01-useState/CounterWithCustomHook';\n//import { SimpleForm } from './components/02-useEffect/SimpleForm';\nimport { MultipleCustomHooks } from './components/03-example-fetch/MultipleCustomHooks';\n//import HookApp from './HookApp';\n\n\nReactDOM.render(\n  <MultipleCustomHooks/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}